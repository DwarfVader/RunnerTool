<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:RunnerTool"
	xmlns:system="clr-namespace:System;assembly=mscorlib">

	<Style x:Key="TextBlock"
		TargetType="{x:Type TextBlock}">
		<Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
		<Setter Property="FontSize" Value="{StaticResource Normal}" />
		<Setter Property="Foreground" Value="{StaticResource VeryDarkGrayBrush}" />
		<Setter Property="TextAlignment" Value="Left" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Margin" Value="5" />
	</Style>

	<Style x:Key="CenterTextBlock"
		BasedOn="{StaticResource TextBlock}"
		TargetType="{x:Type TextBlock}">
		<Setter Property="TextAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Center" />
	</Style>

	<Style x:Key="TextButton"
		BasedOn="{StaticResource CenterTextBlock}"
		TargetType="{x:Type TextBlock}">
	</Style>

	<Style x:Key="IconTextBlock"
		TargetType="{x:Type TextBlock}">
		<Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
		<Setter Property="FontSize" Value="{StaticResource Normal}" />
		<Setter Property="Foreground" Value="{StaticResource VeryDarkGrayBrush}" />
		<Setter Property="TextAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Margin" Value="5" />
	</Style>

	<Style x:Key="CloseIconTextBlock"
		BasedOn="{StaticResource IconTextBlock}"
		TargetType="{x:Type TextBlock}">
		<Setter Property="Text" Value="{StaticResource FontAwesomeCloseIcon}" />
		<Setter Property="HorizontalAlignment" Value="Right" />
		<Setter Property="local:LTokenTooltip.Value" Value="close" />
	</Style>

	<Style x:Key="TextBox"
		TargetType="{x:Type TextBox}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="White" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="CaretBrush" Value="White" />
		<Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
		<Setter Property="FontSize" Value="{StaticResource Normal}" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Padding" Value="5" />
	</Style>

	<Style x:Key="SearchTextBox"
		BasedOn="{StaticResource TextBox}"
		TargetType="TextBox">
		<Setter Property="Tag" Value="Search text" />
	</Style>

	<Style x:Key="TextBoxFasetto"
		BasedOn="{StaticResource BaseStyle}"
		TargetType="{x:Type TextBox}">

		<Setter Property="FontSize" Value="{StaticResource Normal}" />
		<Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
		<Setter Property="Padding" Value="10" />
		<Setter Property="Margin" Value="0 5 0 5" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="White" />

		<Setter Property="Background" Value="{StaticResource VeryDarkGrayBrush}" />
		<Setter Property="Foreground" Value="White" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBoxBase}">

					<Grid>

						<Border x:Name="border"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="True">
							<ScrollViewer x:Name="PART_ContentHost"
								Focusable="False"
								HorizontalScrollBarVisibility="Hidden"
								VerticalScrollBarVisibility="Hidden" />
						</Border>

						<TextBlock x:Name="placeholder"
							Text="{TemplateBinding Tag}"
							Padding="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
							VerticalAlignment="Center"
							FontFamily="{StaticResource LatoThin}"
							Foreground="{StaticResource VeryDarkGrayBrush}"
							IsHitTestVisible="False">
							<TextBlock.Style>
								<Style TargetType="{x:Type TextBlock}">
									<Setter Property="Visibility" Value="Collapsed" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
											Value="">
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</TextBlock.Style>

						</TextBlock>

					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="border" Property="Opacity" Value="0.56" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="#FF7EB4EA" />
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="#FF569DE5" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

	</Style>

	<Style BasedOn="{StaticResource BaseStyle}"
		TargetType="{x:Type PasswordBox}">

		<Setter Property="FontSize" Value="{StaticResource FontSizeLarge}" />
		<Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
		<Setter Property="Padding" Value="10" />
		<Setter Property="Margin" Value="0 5 0 5" />
		<Setter Property="BorderBrush" Value="{StaticResource WordBlueBrush}" />
		<Setter Property="BorderThickness" Value="0 0 0 1" />

		<Setter Property="Background" Value="{StaticResource ForegroundLightBrush}" />
		<Setter Property="Foreground" Value="{StaticResource ForegroundVeryDarkBrush}" />

		<!-- Setter Property="local:MonitorPasswordProperty.Value" Value="True" / -->

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type PasswordBox}">

					<Grid>

						<Border x:Name="border"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="True">
							<ScrollViewer x:Name="PART_ContentHost"
								Focusable="False"
								HorizontalScrollBarVisibility="Hidden"
								VerticalScrollBarVisibility="Hidden" />
						</Border>

						<TextBlock x:Name="placeholder"
							Text="{TemplateBinding Tag}"
							Padding="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
							VerticalAlignment="Center"
							FontFamily="{StaticResource LatoThin}"
							Foreground="{StaticResource ForegroundVeryDarkBrush}"
							IsHitTestVisible="False"
							Visibility="Visible" />

					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="border" Property="Opacity" Value="0.56" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="#FF7EB4EA" />
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="#FF569DE5" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

	</Style>

	<Style x:Key="SpinningText"
		BasedOn="{StaticResource BaseTextBlockStyle}"
		TargetType="{x:Type TextBlock}">

		<Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
		<Setter Property="Text" Value="&#xf110;" />
		<Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
		<Setter Property="RenderTransform">
			<Setter.Value>
				<RotateTransform />
			</Setter.Value>
		</Setter>

		<Style.Resources>
			<Storyboard x:Key="Spin">
				<DoubleAnimation RepeatBehavior="Forever"
					Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
					From="0"
					To="360"
					Duration="0:0:2" />
			</Storyboard>
		</Style.Resources>

		<Style.Triggers>
			<DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}"
				Value="True">
				<DataTrigger.EnterActions>
					<BeginStoryboard Name="SpinStoryboard"
						Storyboard="{StaticResource Spin}" />
				</DataTrigger.EnterActions>
				<DataTrigger.ExitActions>
					<RemoveStoryboard BeginStoryboardName="SpinStoryboard" />
				</DataTrigger.ExitActions>
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="Border"
		TargetType="{x:Type Border}">
		<Setter Property="CornerRadius" Value="10" />
		<Setter Property="Background" Value="{StaticResource VeryDarkGrayBrush}" />
	</Style>
</ResourceDictionary>